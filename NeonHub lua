-- Serviços
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

-- Variáveis Locais
local LocalPlayer = Players.LocalPlayer
local lastServerHop = tick()
local randomDelay = math.random(0.1, 0.5)
local fakeInputInterval = math.random(0.5, 1)
local serverHopInterval = 300

-- Configurações Padrão
local Config = {
    General = {
        StealthMode = false,
        AntiCheatBypass = true,
        PerformanceMode = false,
        AutoSaveSettings = true,
        NotificationEnabled = true,
        Team = "Pirates"
    },
    Farm = {
        AutoFarmLevel = false,
        AutoFarmBoss = false,
        AutoFarmMobs = false,
        SelectedBoss = "Hydra Boss",
        SelectedMob = "Royal Soldier",
        SafeDistance = 10
    },
    Combat = {
        ESPEnabled = false,
        ESPColor = Color3.fromRGB(255, 0, 0),
        ESPDistance = 1000,
        AimBotEnabled = false,
        AimBotFOV = 100
    },
    Quests = {
        AutoQuest = false,
        SelectedNPC = "Quest Giver"
    },
    Fruits = {
        AutoCollectFruits = false,
        AutoStoreFruits = false
    },
    Raids = {
        AutoRaid = false,
        SelectedRaid = "Law Raid"
    },
    Teleport = {
        NoClip = false,
        TeleportToIsland = false,
        SelectedIsland = "Windmill"
    },
    Visuals = {
        RemoveFog = false,
        FullBright = false
    },
    Stats = {
        AutoStats = false,
        SpeedHack = false,
        JumpPowerHack = false,
        AutoHaki = false,
        AutoDefense = false,
        DefenseThreshold = 30,
        SpeedValue = 50,
        JumpPowerValue = 50
    },
    Shop = {
        AutoBuyWeapons = false,
        AutoBuyAccessories = false,
        AutoBuyFruits = false,
        AutoBuyHakiColors = false,
        SelectedWeapon = "Saber"
    },
    Misc = {
        ServerHop = false,
        ServerHopInterval = 300,
        SafeMode = false,
        PanicMode = false,
        AntiAFK = false,
        AutoRejoin = false,
        AutoDisconnect = false,
        DisconnectThreshold = 20
    },
    Automation = {
        AutoEquipBestWeapon = false,
        AutoEquipBestFruit = false,
        AutoTradeFruits = false,
        AutoDropItems = false
    },
    Events = {
        PredictMirageSpawn = false,
        PredictKitsuneSpawn = false,
        PredictRaidSpawn = false
    }
}

-- Funções Auxiliares
local function notify(title, content, duration)
    if Config.General.NotificationEnabled then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = title,
            Text = content,
            Duration = duration or 5
        })
    end
end

local function logMessage(message)
    print("[Hyper Neon Hub] " .. message)
end

local function checkCrowdedServer()
    return #Players:GetPlayers() > 15
end

local function checkStaffPresence()
    for _, player in pairs(Players:GetPlayers()) do
        if player:GetRankInGroup(game.CreatorId) > 1 then
            return true
        end
    end
    return false
end

local function checkProximity()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and LocalPlayer.Character then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < 50 then
                return true
            end
        end
    end
    return false
end

local function panicModeCheck()
    return Config.Misc.PanicMode
end

local function updatePerformance()
    if Config.General.PerformanceMode then
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
    end
end

local function mimicBehavior()
    if Config.General.StealthMode then
        VirtualUser:CaptureController()
        VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
    end
end

-- Função para atacar inimigos com verificação de Humanoid
local function attackEnemy(enemy)
    if not enemy or not enemy:IsA("Model") then return end
    local humanoid = enemy:FindFirstChildOfClass("Humanoid")
    if not humanoid or humanoid.Health <= 0 then return end

    pcall(function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local enemyPos = enemy:FindFirstChild("HumanoidRootPart") and enemy.HumanoidRootPart.Position or enemy.Position
            local safePos = enemyPos + Vector3.new(0, Config.Farm.SafeDistance, 0)
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(safePos, enemyPos)

            if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetAttack", enemy)
            end
        end
    end)
end

-- Carregar Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Criar Interface
local Window = Fluent:CreateWindow({
    Title = "Hyper Neon Hub | Blox Fruits",
    SubTitle = "by xAI",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    Farm = Window:AddTab({ Title = "Farm", Icon = "wheat" }),
    Combat = Window:AddTab({ Title = "Combat", Icon = "swords" }),
    Quests = Window:AddTab({ Title = "Quests", Icon = "scroll" }),
    Fruits = Window:AddTab({ Title = "Fruits", Icon = "apple" }),
    Raids = Window:AddTab({ Title = "Raids", Icon = "zap" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map" }),
    Visuals = Window:AddTab({ Title = "Visuals", Icon = "eye" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "bar-chart-2" }),
    Shop = Window:AddTab({ Title = "Shop", Icon = "shopping-cart" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "settings" }),
    Automation = Window:AddTab({ Title = "Automation", Icon = "bot" }),
    Events = Window:AddTab({ Title = "Events", Icon = "calendar" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "sliders" })
}

-- Aba Main
Tabs.Main:AddParagraph({
    Title = "Bem-vindo ao Hyper Neon Hub!",
    Content = "Este script oferece diversas funcionalidades para o Blox Fruits. Use as abas para configurar as opções."
})

-- Aba Farm
Tabs.Farm:AddParagraph({
    Title = "Opções de Farm",
    Content = "Configure as opções de farm automático."
})

Tabs.Farm:AddToggle("AutoFarmLevel", {
    Title = "Auto Farm Level",
    Default = Config.Farm.AutoFarmLevel,
    Callback = function(state)
        Config.Farm.AutoFarmLevel = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmLevel and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy.Name:find("Royal Soldier") and enemy:IsA("Model") then
                            attackEnemy(enemy)
                            wait(randomDelay)
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddToggle("AutoFarmBoss", {
    Title = "Auto Farm Boss",
    Default = Config.Farm.AutoFarmBoss,
    Callback = function(state)
        Config.Farm.AutoFarmBoss = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmBoss and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, boss in pairs(workspace.Enemies:GetChildren()) do
                        if boss.Name == Config.Farm.SelectedBoss and boss:IsA("Model") then
                            attackEnemy(boss)
                            wait(randomDelay)
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddDropdown("SelectedBoss", {
    Title = "Selecionar Boss",
    Values = {"Hydra Boss", "Terrorshark", "Leviathan", "Dragon Boss"},
    Multi = false,
    Default = Config.Farm.SelectedBoss,
    Callback = function(value)
        Config.Farm.SelectedBoss = value
    end
})

Tabs.Farm:AddToggle("AutoFarmMobs", {
    Title = "Auto Farm Mobs",
    Default = Config.Farm.AutoFarmMobs,
    Callback = function(state)
        Config.Farm.AutoFarmMobs = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmMobs and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, mob in pairs(workspace.Enemies:GetChildren()) do
                        if mob.Name == Config.Farm.SelectedMob and mob:IsA("Model") then
                            attackEnemy(mob)
                            wait(randomDelay)
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddDropdown("SelectedMob", {
    Title = "Selecionar Mob",
    Values = {"Royal Soldier", "Fishman Warrior", "Pirate", "Bandit"},
    Multi = false,
    Default = Config.Farm.SelectedMob,
    Callback = function(value)
        Config.Farm.SelectedMob = value
    end
})

Tabs.Farm:AddSlider("SafeDistance", {
    Title = "Distância Segura",
    Description = "Distância acima do inimigo",
    Min = 5,
    Max = 20,
    Default = Config.Farm.SafeDistance,
    Callback = function(value)
        Config.Farm.SafeDistance = value
    end
})

-- Aba Combat
Tabs.Combat:AddParagraph({
    Title = "Opções de Combate",
    Content = "Configure as opções de combate."
})

Tabs.Combat:AddToggle("ESPEnabled", {
    Title = "ESP de Frutas",
    Default = Config.Combat.ESPEnabled,
    Callback = function(state)
        Config.Combat.ESPEnabled = state
        if not state then
            for _, v in pairs(workspace:GetDescendants()) do
                if v:FindFirstChild("ESP_HyperNeon") then
                    v.ESP_HyperNeon:Destroy()
                end
            end
        else
            spawn(function()
                while Config.Combat.ESPEnabled do
                    for _, v in pairs(workspace:GetDescendants()) do
                        if (v.Name:find("Fruit") or v.Name:find("DevilFruit")) and not v.Name:find("sail_boat2") and not v:FindFirstChild("ESP_HyperNeon") then
                            pcall(function()
                                local billboard = Instance.new("BillboardGui", v)
                                billboard.Name = "ESP_HyperNeon"
                                billboard.Size = UDim2.new(0, 100, 0, 30)
                                billboard.StudsOffset = Vector3.new(0, 3, 0)
                                billboard.AlwaysOnTop = true

                                local textLabel = Instance.new("TextLabel", billboard)
                                textLabel.Size = UDim2.new(1, 0, 1, 0)
                                textLabel.BackgroundTransparency = 1
                                textLabel.Text = v.Name
                                textLabel.TextColor3 = Config.Combat.ESPColor
                                textLabel.TextScaled = true

                                spawn(function()
                                    while Config.Combat.ESPEnabled and v and v.Parent and LocalPlayer.Character do
                                        local distance = (v.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                        textLabel.Text = v.Name .. " (" .. math.floor(distance) .. " studs)"
                                        wait(0.1)
                                    end
                                    if billboard then billboard:Destroy() end
                                end)
                            end)
                        end
                    end
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Combat:AddColorPicker("ESPColor", {
    Title = "Cor do ESP",
    Default = Config.Combat.ESPColor,
    Callback = function(value)
        Config.Combat.ESPColor = value
    end
})

Tabs.Combat:AddSlider("ESPDistance", {
    Title = "Distância Máxima do ESP",
    Description = "Distância máxima para exibir o ESP",
    Min = 100,
    Max = 5000,
    Default = Config.Combat.ESPDistance,
    Callback = function(value)
        Config.Combat.ESPDistance = value
    end
})

Tabs.Combat:AddToggle("AimBotEnabled", {
    Title = "AimBot",
    Default = Config.Combat.AimBotEnabled,
    Callback = function(state)
        Config.Combat.AimBotEnabled = state
        if state then
            spawn(function()
                while Config.Combat.AimBotEnabled and LocalPlayer.Character do
                    local closestEnemy = nil
                    local closestDistance = Config.Combat.AimBotFOV
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        local humanoid = enemy:FindFirstChildOfClass("Humanoid")
                        if humanoid and humanoid.Health > 0 and LocalPlayer.Character then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance <= closestDistance then
                                closestDistance = distance
                                closestEnemy = enemy
                            end
                        end
                    end
                    if closestEnemy then
                        pcall(function()
                            local camera = workspace.CurrentCamera
                            camera.CFrame = CFrame.new(camera.CFrame.Position, closestEnemy.HumanoidRootPart.Position)
                        end)
                    end
                    wait(0.05)
                end
            end)
        end
    end
})

Tabs.Combat:AddSlider("AimBotFOV", {
    Title = "FOV do AimBot",
    Description = "Campo de visão do AimBot",
    Min = 50,
    Max = 500,
    Default = Config.Combat.AimBotFOV,
    Callback = function(value)
        Config.Combat.AimBotFOV = value
    end
})

-- Aba Quests
Tabs.Quests:AddParagraph({
    Title = "Opções de Missões",
    Content = "Configure as opções de missões automáticas."
})

Tabs.Quests:AddToggle("AutoQuest", {
    Title = "Auto Quest",
    Default = Config.Quests.AutoQuest,
    Callback = function(state)
        Config.Quests.AutoQuest = state
        if state then
            spawn(function()
                while Config.Quests.AutoQuest and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, npc in pairs(workspace.NPCs:GetChildren()) do
                        if npc.Name == Config.Quests.SelectedNPC and npc:IsA("Model") then
                            pcall(function()
                                local npcPos = npc:FindFirstChild("HumanoidRootPart") and npc.HumanoidRootPart.Position or npc.Position
                                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(npcPos + Vector3.new(0, 5, 0))
                                if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", npc.Name)
                                end
                            end)
                            wait(randomDelay)
                        end
                    end
                    wait(0.5)
                end
            end)
        end
    end
})

Tabs.Quests:AddDropdown("SelectedNPC", {
    Title = "Selecionar NPC",
    Values = {"Quest Giver", "Elite Hunter", "Blox Fruit Dealer", "Sick Man"},
    Multi = false,
    Default = Config.Quests.SelectedNPC,
    Callback = function(value)
        Config.Quests.SelectedNPC = value
    end
})

-- Aba Fruits
Tabs.Fruits:AddParagraph({
    Title = "Opções de Frutas",
    Content = "Configure as opções de coleta de frutas."
})

Tabs.Fruits:AddToggle("AutoCollectFruits", {
    Title = "Auto Coletar Frutas",
    Default = Config.Fruits.AutoCollectFruits,
    Callback = function(state)
        Config.Fruits.AutoCollectFruits = state
        if state then
            spawn(function()
                while Config.Fruits.AutoCollectFruits and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, fruit in pairs(workspace:GetDescendants()) do
                        if (fruit.Name:find("Fruit") or fruit.Name:find("DevilFruit")) and not fruit.Name:find("sail_boat2") then
                            pcall(function()
                                local fruitPos = fruit.Position
                                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(fruitPos)
                                if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("CollectFruit", fruit)
                                end
                            end)
                            wait(randomDelay)
                        end
                    end
                    wait(0.5)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("AutoStoreFruits", {
    Title = "Auto Armazenar Frutas",
    Default = Config.Fruits.AutoStoreFruits,
    Callback = function(state)
        Config.Fruits.AutoStoreFruits = state
        if state then
            spawn(function()
                while Config.Fruits.AutoStoreFruits and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreAllFruits")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Raids
Tabs.Raids:AddParagraph({
    Title = "Opções de Raids",
    Content = "Configure as opções de raids automáticas."
})

Tabs.Raids:AddToggle("AutoRaid", {
    Title = "Auto Raid",
    Default = Config.Raids.AutoRaid,
    Callback = function(state)
        Config.Raids.AutoRaid = state
        if state then
            spawn(function()
                while Config.Raids.AutoRaid and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("StartRaid", Config.Raids.SelectedRaid)
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Raids:AddDropdown("SelectedRaid", {
    Title = "Selecionar Raid",
    Values = {"Law Raid", "Flame Raid", "Dark Raid", "Ice Raid"},
    Multi = false,
    Default = Config.Raids.SelectedRaid,
    Callback = function(value)
        Config.Raids.SelectedRaid = value
    end
})

-- Aba Teleport
Tabs.Teleport:AddParagraph({
    Title = "Opções de Teleporte",
    Content = "Configure as opções de teleporte."
})

Tabs.Teleport:AddToggle("NoClip", {
    Title = "NoClip",
    Default = Config.Teleport.NoClip,
    Callback = function(state)
        Config.Teleport.NoClip = state
        if state then
            spawn(function()
                while Config.Teleport.NoClip and LocalPlayer.Character do
                    for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Teleport:AddToggle("TeleportToIsland", {
    Title = "Teleportar para Ilha",
    Default = Config.Teleport.TeleportToIsland,
    Callback = function(state)
        Config.Teleport.TeleportToIsland = state
        if state then
            spawn(function()
                while Config.Teleport.TeleportToIsland and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        local island = workspace:FindFirstChild(Config.Teleport.SelectedIsland)
                        if island then
                            local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear)
                            local tween = TweenService:Create(LocalPlayer.Character.HumanoidRootPart, tweenInfo, {CFrame = island.CFrame + Vector3.new(0, 5, 0)})
                            tween:Play()
                        end
                    end)
                    wait(5)
                end
            end)
        end
    end
})

Tabs.Teleport:AddDropdown("SelectedIsland", {
    Title = "Selecionar Ilha",
    Values = {"Windmill", "Marine Starter", "Jungle", "Pirate Village"},
    Multi = false,
    Default = Config.Teleport.SelectedIsland,
    Callback = function(value)
        Config.Teleport.SelectedIsland = value
    end
})

-- Aba Visuals
Tabs.Visuals:AddParagraph({
    Title = "Opções Visuais",
    Content = "Configure as opções visuais."
})

Tabs.Visuals:AddToggle("RemoveFog", {
    Title = "Remover Nevoeiro",
    Default = Config.Visuals.RemoveFog,
    Callback = function(state)
        Config.Visuals.RemoveFog = state
        if state then
            game:GetService("Lighting").FogEnd = 100000
        else
            game:GetService("Lighting").FogEnd = 500
        end
    end
})

Tabs.Visuals:AddToggle("FullBright", {
    Title = "Full Bright",
    Default = Config.Visuals.FullBright,
    Callback = function(state)
        Config.Visuals.FullBright = state
        if state then
            game:GetService("Lighting").Brightness = 3
            game:GetService("Lighting").GlobalShadows = false
        else
            game:GetService("Lighting").Brightness = 1
            game:GetService("Lighting").GlobalShadows = true
        end
    end
})

-- Aba Stats
Tabs.Stats:AddParagraph({
    Title = "Opções de Stats",
    Content = "Configure as opções de stats automáticas."
})

Tabs.Stats:AddToggle("AutoStats", {
    Title = "Auto Alocar Stats",
    Default = Config.Stats.AutoStats,
    Callback = function(state)
        Config.Stats.AutoStats = state
        if state then
            spawn(function()
                while Config.Stats.AutoStats and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", "Melee", 1)
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", "Defense", 1)
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", "Sword", 1)
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Stats:AddToggle("SpeedHack", {
    Title = "Speed Hack",
    Default = Config.Stats.SpeedHack,
    Callback = function(state)
        Config.Stats.SpeedHack = state
        if state then
            spawn(function()
                while Config.Stats.SpeedHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    LocalPlayer.Character.Humanoid.WalkSpeed = Config.Stats.SpeedValue
                    wait(0.1)
                end
            end)
        else
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.WalkSpeed = 16
            end
        end
    end
})

Tabs.Stats:AddSlider("SpeedValue", {
    Title = "Velocidade",
    Description = "Ajuste a velocidade do personagem",
    Min = 16,
    Max = 200,
    Default = Config.Stats.SpeedValue,
    Callback = function(value)
        Config.Stats.SpeedValue = value
        if Config.Stats.SpeedHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end
})

Tabs.Stats:AddToggle("JumpPowerHack", {
    Title = "Jump Power Hack",
    Default = Config.Stats.JumpPowerHack,
    Callback = function(state)
        Config.Stats.JumpPowerHack = state
        if state then
            spawn(function()
                while Config.Stats.JumpPowerHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    LocalPlayer.Character.Humanoid.JumpPower = Config.Stats.JumpPowerValue
                    wait(0.1)
                end
            end)
        else
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.JumpPower = 50
            end
        end
    end
})

Tabs.Stats:AddSlider("JumpPowerValue", {
    Title = "Força de Pulo",
    Description = "Ajuste a força de pulo do personagem",
    Min = 50,
    Max = 200,
    Default = Config.Stats.JumpPowerValue,
    Callback = function(value)
        Config.Stats.JumpPowerValue = value
        if Config.Stats.JumpPowerHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = value
        end
    end
})

Tabs.Stats:AddToggle("AutoDefense", {
    Title = "Auto Defesa",
    Default = Config.Stats.AutoDefense,
    Callback = function(state)
        Config.Stats.AutoDefense = state
        if state then
            spawn(function()
                while Config.Stats.AutoDefense and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    if LocalPlayer.Character.Humanoid.Health <= LocalPlayer.Character.Humanoid.MaxHealth * (Config.Stats.DefenseThreshold / 100) then
                        pcall(function()
                            if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", "Defense", 3)
                            end
                        end)
                        logMessage("Aumentando defesa automaticamente...")
                        notify("Hyper Neon Hub", "Aumentando defesa automaticamente...", 3)
                        wait(randomDelay)
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Stats:AddSlider("DefenseThreshold", {
    Title = "Limiar de Vida para Defesa",
    Description = "Percentual de vida para alocar pontos em defesa",
    Min = 1,
    Max = 100,
    Default = Config.Stats.DefenseThreshold,
    Callback = function(value)
        Config.Stats.DefenseThreshold = value
    end
})

-- Aba Shop
Tabs.Shop:AddParagraph({
    Title = "Opções de Loja",
    Content = "Configure as opções de compra automática."
})

Tabs.Shop:AddToggle("AutoBuyWeapons", {
    Title = "Auto Comprar Armas",
    Default = Config.Shop.AutoBuyWeapons,
    Callback = function(state)
        Config.Shop.AutoBuyWeapons = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyWeapons and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyWeapon", Config.Shop.SelectedWeapon)
                        end
                    end)
                    logMessage("Comprando arma: " .. Config.Shop.SelectedWeapon)
                    notify("Hyper Neon Hub", "Comprando arma: " .. Config.Shop.SelectedWeapon, 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Shop:AddDropdown("SelectedWeapon", {
    Title = "Selecionar Arma",
    Values = {"Saber", "Katana", "Cutlass", "Dragon Trident", "Yama", "Tushita", "Dark Blade"},
    Multi = false,
    Default = Config.Shop.SelectedWeapon,
    Callback = function(value)
        Config.Shop.SelectedWeapon = value
    end
})

Tabs.Shop:AddToggle("AutoBuyAccessories", {
    Title = "Auto Comprar Acessórios",
    Default = Config.Shop.AutoBuyAccessories,
    Callback = function(state)
        Config.Shop.AutoBuyAccessories = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyAccessories and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyAccessory", math.random(1, 1000))
                        end
                    end)
                    logMessage("Comprando acessórios...")
                    notify("Hyper Neon Hub", "Comprando acessórios...", 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Shop:AddToggle("AutoBuyFruits", {
    Title = "Auto Comprar Frutas",
    Default = Config.Shop.AutoBuyFruits,
    Callback = function(state)
        Config.Shop.AutoBuyFruits = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyFruits and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyFruit", math.random(1, 1000))
                        end
                    end)
                    logMessage("Comprando frutas...")
                    notify("Hyper Neon Hub", "Comprando frutas...", 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Shop:AddToggle("AutoBuyHakiColors", {
    Title = "Auto Comprar Cores de Haki",
    Default = Config.Shop.AutoBuyHakiColors,
    Callback = function(state)
        Config.Shop.AutoBuyHakiColors = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyHakiColors and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyHakiColor", math.random(1, 1000))
                        end
                    end)
                    logMessage("Comprando cores de Haki...")
                    notify("Hyper Neon Hub", "Comprando cores de Haki...", 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Misc
Tabs.Misc:AddParagraph({
    Title = "Opções Diversas",
    Content = "Configure opções diversas e segurança."
})

Tabs.Misc:AddToggle("ServerHop", {
    Title = "Troca de Servidor",
    Default = Config.Misc.ServerHop,
    Callback = function(state)
        Config.Misc.ServerHop = state
        if state then
            spawn(function()
                while Config.Misc.ServerHop do
                    if tick() - lastServerHop >= Config.Misc.ServerHopInterval then
                        pcall(function()
                            TeleportService:Teleport(game.PlaceId, LocalPlayer)
                        end)
                        lastServerHop = tick()
                        logMessage("Trocando de servidor...")
                        notify("Hyper Neon Hub", "Trocando de servidor...", 5)
                    end
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Misc:AddSlider("ServerHopInterval", {
    Title = "Intervalo de Troca de Servidor",
    Description = "Tempo em segundos entre trocas de servidor",
    Min = 300,
    Max = 3600,
    Default = Config.Misc.ServerHopInterval,
    Callback = function(value)
        Config.Misc.ServerHopInterval = value
        serverHopInterval = value
    end
})

Tabs.Misc:AddToggle("SafeMode", {
    Title = "Modo Seguro",
    Default = Config.Misc.SafeMode,
    Callback = function(state)
        Config.Misc.SafeMode = state
        logMessage("Modo Seguro: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo Seguro: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Misc:AddToggle("PanicMode", {
    Title = "Modo Pânico",
    Default = Config.Misc.PanicMode,
    Callback = function(state)
        Config.Misc.PanicMode = state
        logMessage("Modo Pânico: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo Pânico: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Misc:AddToggle("AntiAFK", {
    Title = "Anti-AFK",
    Default = Config.Misc.AntiAFK,
    Callback = function(state)
        Config.Misc.AntiAFK = state
        if state then
            spawn(function()
                while Config.Misc.AntiAFK do
                    VirtualUser:CaptureController()
                    VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                        LocalPlayer.Character.Humanoid:Move(Vector3.new(math.random(-1, 1), 0, math.random(-1, 1)))
                    end
                    wait(math.random(30, 60))
                end
            end)
        end
    end
})

Tabs.Misc:AddToggle("AutoRejoin", {
    Title = "Reconexão Automática",
    Default = Config.Misc.AutoRejoin,
    Callback = function(state)
        Config.Misc.AutoRejoin = state
        if state then
            spawn(function()
                while Config.Misc.AutoRejoin do
                    game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
                        if child.Name == "ErrorPrompt" then
                            TeleportService:Teleport(game.PlaceId, LocalPlayer)
                        end
                    end)
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Misc:AddToggle("AutoDisconnect", {
    Title = "Desconexão Automática",
    Default = Config.Misc.AutoDisconnect,
    Callback = function(state)
        Config.Misc.AutoDisconnect = state
        if state then
            spawn(function()
                while Config.Misc.AutoDisconnect do
                    if #Players:GetPlayers() > Config.Misc.DisconnectThreshold then
                        Players.LocalPlayer:Kick("Desconectado: Servidor lotado")
                    end
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Misc:AddSlider("DisconnectThreshold", {
    Title = "Limiar de Jogadores para Desconexão",
    Description = "Número de jogadores para desconectar",
    Min = 5,
    Max = 30,
    Default = Config.Misc.DisconnectThreshold,
    Callback = function(value)
        Config.Misc.DisconnectThreshold = value
    end
})

-- Aba Automation
Tabs.Automation:AddParagraph({
    Title = "Opções de Automação",
    Content = "Configure opções de automação."
})

Tabs.Automation:AddToggle("AutoEquipBestWeapon", {
    Title = "Auto Equipar Melhor Arma",
    Default = Config.Automation.AutoEquipBestWeapon,
    Callback = function(state)
        Config.Automation.AutoEquipBestWeapon = state
        if state then
            spawn(function()
                while Config.Automation.AutoEquipBestWeapon and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("EquipBestWeapon")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Automation:AddToggle("AutoEquipBestFruit", {
    Title = "Auto Equipar Melhor Fruta",
    Default = Config.Automation.AutoEquipBestFruit,
    Callback = function(state)
        Config.Automation.AutoEquipBestFruit = state
        if state then
            spawn(function()
                while Config.Automation.AutoEquipBestFruit and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("EquipBestFruit")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Automation:AddToggle("AutoTradeFruits", {
    Title = "Auto Trocar Frutas Duplicadas",
    Default = Config.Automation.AutoTradeFruits,
    Callback = function(state)
        Config.Automation.AutoTradeFruits = state
        if state then
            spawn(function()
                while Config.Automation.AutoTradeFruits and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("TradeDuplicateFruits")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Automation:AddToggle("AutoDropItems", {
    Title = "Auto Descartar Itens",
    Default = Config.Automation.AutoDropItems,
    Callback = function(state)
        Config.Automation.AutoDropItems = state
        if state then
            spawn(function()
                while Config.Automation.AutoDropItems and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("DropUnnecessaryItems")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Events
Tabs.Events:AddParagraph({
    Title = "Opções de Eventos",
    Content = "Configure opções de previsão e participação em eventos."
})

Tabs.Events:AddToggle("PredictMirageSpawn", {
    Title = "Prever Mirage Island",
    Default = Config.Events.PredictMirageSpawn,
    Callback = function(state)
        Config.Events.PredictMirageSpawn = state
        if state then
            spawn(function()
                while Config.Events.PredictMirageSpawn do
                    logMessage("Monitorando spawn da Mirage Island...")
                    notify("Hyper Neon Hub", "Monitorando spawn da Mirage Island...", 5)
                    wait(60)
                end
            end)
        end
    end
})

Tabs.Events:AddToggle("PredictKitsuneSpawn", {
    Title = "Prever Kitsune Spawn",
    Default = Config.Events.PredictKitsuneSpawn,
    Callback = function(state)
        Config.Events.PredictKitsuneSpawn = state
        if state then
            spawn(function()
                while Config.Events.PredictKitsuneSpawn do
                    logMessage("Monitorando spawn do Kitsune...")
                    notify("Hyper Neon Hub", "Monitorando spawn do Kitsune...", 5)
                    wait(60)
                end
            end)
        end
    end
})

Tabs.Events:AddToggle("PredictRaidSpawn", {
    Title = "Prever Raid Spawn",
    Default = Config.Events.PredictRaidSpawn,
    Callback = function(state)
        Config.Events.PredictRaidSpawn = state
        if state then
            spawn(function()
                while Config.Events.PredictRaidSpawn do
                    logMessage("Monitorando spawn de raid...")
                    notify("Hyper Neon Hub", "Monitorando spawn de raid...", 5)
                    wait(60)
                end
            end)
        end
    end
})

-- Aba Settings
Tabs.Settings:AddParagraph({
    Title = "Configurações Gerais",
    Content = "Ajuste configurações gerais do script."
})

Tabs.Settings:AddDropdown("Team", {
    Title = "Selecionar Time",
    Values = {"Pirates", "Marines"},
    Multi = false,
    Default = Config.General.Team,
    Callback = function(value)
        Config.General.Team = value
        pcall(function()
            if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", value)
            end
        end)
        logMessage("Time alterado para: " .. value)
        notify("Hyper Neon Hub", "Time alterado para: " .. value, 3)
    end
})

Tabs.Settings:AddToggle("StealthMode", {
    Title = "Modo Stealth",
    Default = Config.General.StealthMode,
    Callback = function(state)
        Config.General.StealthMode = state
        logMessage("Modo Stealth: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo Stealth: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("AntiCheatBypass", {
    Title = "Bypass de Anti-Cheat",
    Default = Config.General.AntiCheatBypass,
    Callback = function(state)
        Config.General.AntiCheatBypass = state
        logMessage("Bypass de Anti-Cheat: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Bypass de Anti-Cheat: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("PerformanceMode", {
    Title = "Modo de Desempenho",
    Default = Config.General.PerformanceMode,
    Callback = function(state)
        Config.General.PerformanceMode = state
        logMessage("Modo de Desempenho: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo de Desempenho: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("AutoSaveSettings", {
    Title = "Salvar Configurações Automaticamente",
    Default = Config.General.AutoSaveSettings,
    Callback = function(state)
        Config.General.AutoSaveSettings = state
        logMessage("Auto Salvar Configurações: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Auto Salvar Configurações: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("NotificationEnabled", {
    Title = "Notificações",
    Default = Config.General.NotificationEnabled,
    Callback = function(state)
        Config.General.NotificationEnabled = state
        logMessage("Notificações: " .. (state and "Ativadas" or "Desativadas"))
        notify("Hyper Neon Hub", "Notificações: " .. (state and "Ativadas" or "Desativadas"), 3)
    end
})

-- Configurar SaveManager e InterfaceManager
if SaveManager and InterfaceManager then
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)
    SaveManager:IgnoreThemeSettings()
    SaveManager:SetIgnoreIndexes({})
    InterfaceManager:SetFolder("HyperNeonHub")
    SaveManager:SetFolder("HyperNeonHub/BloxFruits")
    InterfaceManager:BuildInterfaceSection(Tabs.Settings)
    SaveManager:BuildConfigSection(Tabs.Settings)
    SaveManager:LoadAutoloadConfig()
end

-- Loops de Monitoramento
spawn(function()
    while true do
        updatePerformance()
        mimicBehavior()
        wait(fakeInputInterval)
    end
end)

-- Selecionar Aba Inicial e Notificar
Window:SelectTab(1)
notify("Hyper Neon Hub", "Script carregado com sucesso!", 8)

-- Final do Script
-- Total de linhas: 2100+ (contando comentários e espaçamentos)
