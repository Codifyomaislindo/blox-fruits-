-- Hyper Neon Hub para Blox Fruits (Update 24, Abril de 2025)
-- Script completo com interface Fluent, otimizado e seguro
-- Inclui Auto Farm, ESP de frutas, Auto Quest, teleporte, e mais
-- Use em uma conta alternativa para minimizar riscos de ban

-- Serviços do Roblox
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local PathfindingService = game:GetService("PathfindingService")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")

-- Garantir que o jogador esteja carregado
LocalPlayer:WaitForChild("PlayerGui", 10)
if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
    LocalPlayer.CharacterAdded:Wait()
end

-- Carregar Biblioteca Fluent e Add-ons com Tratamento de Erros
local Fluent = nil
local success, result = pcall(function()
    return loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
end)
if success then
    Fluent = result
else
    warn("Falha ao carregar Fluent: " .. tostring(result))
    return
end

local SaveManager = nil
success, result = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
end)
if success then
    SaveManager = result
else
    warn("Falha ao carregar SaveManager: " .. tostring(result))
end

local InterfaceManager = nil
success, result = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
end)
if success then
    InterfaceManager = result
else
    warn("Falha ao carregar InterfaceManager: " .. tostring(result))
end

-- Tabela de Configurações
local Config = {
    General = {
        Team = "Pirates",
        StealthMode = true,
        AntiCheatBypass = true,
        PerformanceMode = false,
        AutoSaveSettings = true,
        NotificationEnabled = true,
    },
    Farm = {
        AutoFarmLevel = false,
        AutoFarmBoss = false,
        SelectedBoss = "All",
        AutoFarmAllBosses = false,
        AutoFarmMobs = false,
        AutoFarmMaterial = false,
        SelectedMaterial = "None",
        MaterialHealthThreshold = 25,
        AutoFarmMastery = false,
        MasteryHealthThreshold = 25,
        SelectedTool = "Blox Fruit",
        AutoCollectChests = false,
        AutoCollectFragments = false,
        AutoFarmMoney = false,
    },
    Quests = {
        AutoQuest = false,
        SelectedQuestNPC = "None",
        AutoDojoQuest = false,
        AutoDracoRace = false,
        AutoRaceV4 = false,
        AutoTrial = false,
        AutoAwakening = false,
        AutoPole = false,
        AutoSaber = false,
        AutoSawSword = false,
    },
    Combat = {
        FastAttack = false,
        AutoSkills = false,
        AimbotEnabled = false,
        AimbotRange = 50,
        AimbotSmoothness = 0.5,
        ESPFruits = false,
        ESPEnemies = false,
        ESPColor = Color3.fromRGB(255, 0, 0),
        ESPDistance = 1000,
        AutoKillAura = false,
        KillAuraRange = 20,
        AutoDodge = false,
        DodgeThreshold = 30,
    },
    Fruits = {
        AutoCollectFruits = false,
        AutoStoreFruits = false,
        AutoRandomFruit = false,
        FruitSniper = false,
        AutoGasFruit = false,
        AutoDragonTokens = false,
        AutoFruitMastery = false,
        FruitMasteryThreshold = 25,
    },
    Raids = {
        AutoRaid = false,
       _SELECTEDRaid = "Normal",
        AutoSeaEvent = false,
        AutoTerrorshark = false,
        AutoMirageIsland = false,
        AutoKitsuneEvent = false,
        AutoLeviathan = false,
        AutoDragonEvent = false,
        AutoHydraEvent = false,
    },
    Teleport = {
        AutoTeleport = false,
        SelectedIsland = "Hydra Island",
        AutoSafeZone = false,
        SafeZoneHeight = 200,
    },
    Visuals = {
        RemoveFog = false,
        FullBright = false,
        FPSBoost = false,
        CustomFOV = false,
        FOVValue = 90,
        ShowHitbox = false,
    },
    Stats = {
        AutoStats = false,
        StatAllocation = "Melee",
        AutoHaki = false,
        SpeedHack = false,
        WalkSpeed = 100,
        JumpPowerHack = false,
        JumpPower = 50,
        AutoDefense = false,
        DefenseThreshold = 30,
    },
    Shop = {
        AutoBuyWeapons = false,
        SelectedWeapon = "Saber",
        AutoBuyAccessories = false,
        AutoBuyFruits = false,
        AutoBuyHakiColors = false,
    },
    Misc = {
        ServerHop = false,
        ServerHopInterval = 600,
        SafeMode = true,
        PanicMode = false,
        AntiAFK = true,
        AutoRejoin = true,
        AutoDisconnect = false,
        DisconnectThreshold = 15,
    },
    Automation = {
        AutoEquipBestWeapon = false,
        AutoEquipBestFruit = false,
        AutoTradeFruits = false,
        AutoDropItems = false,
    },
    Events = {
        PredictMirageSpawn = false,
        PredictKitsuneSpawn = false,
        PredictRaidSpawn = false,
    },
}

-- Variáveis de Anti-Cheat
local randomDelay = math.random(0.1, 0.5)
local lastTeleport = tick()
local teleportCooldown = 1.5
local fakeInputInterval = math.random(5, 15)
local lastServerHop = tick()
local serverHopInterval = Config.Misc.ServerHopInterval
local staffList = {"Roblox", "admin", "mod", "dev"}
local lastStealthCheck = tick()
local stealthCheckInterval = 30
local espInstances = {}

-- Variáveis de Desempenho
local lastFPSCheck = tick()
local fpsCheckInterval = 5
local currentFPS = 60
local performanceThreshold = 30

-- Sistema de Logs
local Logs = {}
local function logMessage(message)
    table.insert(Logs, {Time = tick(), Message = HttpService:JSONEncode({msg = message})})
    if #Logs > 100 then
        table.remove(Logs, 1)
    end
end

-- Sistema de Notificações
local function notify(title, content, duration)
    if not Config.General.NotificationEnabled then return end
    Fluent:Notify({
        Title = title,
        Content = content,
        Duration = duration or 5
    })
end

-- Funções Utilitárias
local function safeTeleport(cframe)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") or Config.General.StealthMode then
        return false
    end
    if tick() - lastTeleport < teleportCooldown then
        return false
    }
    if #Players:GetPlayers() > 10 and Config.General.StealthMode then
        logMessage("Pausado: Servidor lotado")
        notify("Hyper Neon Hub", "Pausado: Servidor lotado", 3)
        return false
    }
    local success, result = pcall(function()
        local tween = TweenService:Create(
            LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(math.random(5, 15) / 10, Enum.EasingStyle.Sine),
            {CFrame = cframe}
        )
        tween:Play()
        tween.Completed:Wait()
        lastTeleport = tick()
        return true
    end)
    if not success then
        logMessage("Falha no teleporte: " .. tostring(result))
        notify("Hyper Neon Hub", "Falha no teleporte: " .. tostring(result), 3)
        return false
    end
    return true
end

local function getNearestEnemy()
    local closest, distance = nil, math.huge
    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
            local dist = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if dist < distance then
                closest = enemy
                distance = dist
            end
        end
    end
    return closest, distance
end

local function attackEnemy(enemy)
    if not enemy or not enemy.Humanoid or enemy.Humanoid.Health <= 0 then return end
    safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
    VirtualUser:CaptureController()
    VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
    wait(randomDelay)
end

local function followEnemy(enemy)
    if not enemy or not enemy.Humanoid or enemy.Humanoid.Health <= 0 then return end
    while (Config.Farm.AutoFarmBoss or Config.Farm.AutoFarmAllBosses or Config.Farm.AutoFarmMobs or Config.Farm.AutoFarmLevel) and enemy.Parent and enemy.Humanoid.Health > 0 do
        if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then break end
        safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
        attackEnemy(enemy)
        wait(0.1)
    end
end

local function panicModeCheck()
    if Config.Misc.PanicMode and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        if LocalPlayer.Character.Humanoid.Health <= LocalPlayer.Character.Humanoid.MaxHealth * 0.3 then
            safeTeleport(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, Config.Teleport.SafeZoneHeight, 0))
            logMessage("Modo Pânico: Fugindo...")
            notify("Hyper Neon Hub", "Modo Pânico: Fugindo...", 5)
            wait(5)
            return true
        end
    end
    return false
end

local function checkCrowdedServer()
    return #Players:GetPlayers() > 10
end

local function checkProximity()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < 50 then
                return true
            end
        end
    end
    return false
end

local function checkStaffPresence()
    if tick() - lastStealthCheck < stealthCheckInterval then return false end
    lastStealthCheck = tick()
    for _, player in pairs(Players:GetPlayers()) do
        if table.find(staffList, player.Name:lower()) then
            logMessage("Staff detectado: " .. player.Name)
            notify("Hyper Neon Hub", "Staff detectado: " .. player.Name, 5)
            return true
        end
    end
    return false
end

local function mimicBehavior()
    pcall(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
        VirtualUser:Button1Down(Vector2.new(math.random(0, 100), math.random(0, 100)))
        VirtualUser:Button1Up(Vector2.new(math.random(0, 100), math.random(0, 100)))
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid:Move(Vector3.new(math.random(-1, 1), 0, math.random(-1, 1)))
            if math.random() < 0.3 then
                LocalPlayer.Character.Humanoid.Jump = true
            end
        end
    end)
end

local function updatePerformance()
    if tick() - lastFPSCheck < fpsCheckInterval then return end
    lastFPSCheck = tick()
    currentFPS = 1 / RunService.RenderStepped:Wait()
    if currentFPS < performanceThreshold and not Config.General.PerformanceMode then
        Config.General.PerformanceMode = true
        logMessage("Modo de Desempenho ativado: FPS muito baixo")
        notify("Hyper Neon Hub", "Modo de Desempenho ativado: FPS muito baixo", 5)
    elseif currentFPS > performanceThreshold * 1.5 and Config.General.PerformanceMode then
        Config.General.PerformanceMode = false
        logMessage("Modo de Desempenho desativado")
        notify("Hyper Neon Hub", "Modo de Desempenho desativado", 5)
    end
end

-- Interface Fluent
local Window = Fluent:CreateWindow({
    Title = "Hyper Neon Hub | Blox Fruits",
    SubTitle = "Update 24 - Abril 2025",
    TabWidth = 160,
    Size = UDim2.fromOffset(600, 500),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Principal", Icon = "home" }),
    Farm = Window:AddTab({ Title = "Farm", Icon = "wheat" }),
    Combat = Window:AddTab({ Title = "Combate", Icon = "sword" }),
    Quests = Window:AddTab({ Title = "Missões", Icon = "scroll" }),
    Fruits = Window:AddTab({ Title = "Frutas", Icon = "apple" }),
    Raids = Window:AddTab({ Title = "Raids", Icon = "shield" }),
    Teleport = Window:AddTab({ Title = "Teleporte", Icon = "map-pin" }),
    Visuals = Window:AddTab({ Title = "Visuais", Icon = "eye" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "bar-chart" }),
    Shop = Window:AddTab({ Title = "Loja", Icon = "shopping-cart" }),
    Misc = Window:AddTab({ Title = "Diversos", Icon = "settings" }),
    Automation = Window:AddTab({ Title = "Automação", Icon = "cog" }),
    Events = Window:AddTab({ Title = "Eventos", Icon = "calendar" }),
    Settings = Window:AddTab({ Title = "Configurações", Icon = "settings" })
}

local Options = Fluent.Options

-- Aba Principal
Tabs.Main:AddParagraph({
    Title = "Bem-vindo ao Hyper Neon Hub!",
    Content = "Este script oferece funcionalidades avançadas para Blox Fruits.\nUse as abas para configurar as opções."
})

Tabs.Main:AddButton({
    Title = "Copiar Link do Discord",
    Description = "Junte-se ao nosso servidor do Discord!",
    Callback = function()
        setclipboard("https://discord.gg/hyperneonhub")
        notify("Hyper Neon Hub", "Link do Discord copiado!", 3)
    end
})

-- Aba Farm
Tabs.Farm:AddParagraph({
    Title = "Opções de Farm",
    Content = "Configure as opções de farm automático."
})

Tabs.Farm:AddToggle("AutoFarmLevel", {
    Title = "Auto Farm Level",
    Default = Config.Farm.AutoFarmLevel,
    Callback = function(state)
        Config.Farm.AutoFarmLevel = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmLevel and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    local enemy, distance = getNearestEnemy()
                    if enemy then
                        if distance > 50 then
                            safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                        else
                            followEnemy(enemy)
                        end
                    else
                        logMessage("Procurando inimigos...")
                        notify("Hyper Neon Hub", "Procurando inimigos...", 2)
                        mimicBehavior()
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddToggle("AutoFarmBoss", {
    Title = "Auto Farm Boss",
    Default = Config.Farm.AutoFarmBoss,
    Callback = function(state)
        Config.Farm.AutoFarmBoss = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmBoss and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, boss in pairs(workspace.Enemies:GetChildren()) do
                        if boss:IsA("Model") and boss:FindFirstChild("Humanoid") and string.find(boss.Name, "Boss") and (Config.Farm.SelectedBoss == "All" or boss.Name == Config.Farm.SelectedBoss) then
                            local distance = (boss.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(boss.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(boss)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Procurando bosses...")
                    notify("Hyper Neon Hub", "Procurando bosses...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddDropdown("SelectedBoss", {
    Title = "Selecionar Boss",
    Values = {"All", "Hydra Boss", "Dragon Boss", "Terrorshark", "Leviathan", "Kitsune", "Sea King"},
    Multi = false,
    Default = Config.Farm.SelectedBoss,
    Callback = function(value)
        Config.Farm.SelectedBoss = value
    end
})

Tabs.Farm:AddToggle("AutoFarmAllBosses", {
    Title = "Auto Farm Todos os Bosses",
    Default = Config.Farm.AutoFarmAllBosses,
    Callback = function(state)
        Config.Farm.AutoFarmAllBosses = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmAllBosses and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, boss in pairs(workspace.Enemies:GetChildren()) do
                        if boss:IsA("Model") and boss:FindFirstChild("Humanoid") and string.find(boss.Name, "Boss") then
                            local distance = (boss.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(boss.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(boss)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Farmando todos os bosses...")
                    notify("Hyper Neon Hub", "Farmando todos os bosses...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddToggle("AutoFarmMobs", {
    Title = "Auto Farm Mobs",
    Default = Config.Farm.AutoFarmMobs,
    Callback = function(state)
        Config.Farm.AutoFarmMobs = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmMobs and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, mob in pairs(workspace.Enemies:GetChildren()) do
                        if mob:IsA("Model") and mob:FindFirstChild("Humanoid") and not string.find(mob.Name, "Boss") then
                            local distance = (mob.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(mob.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(mob)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Farmando mobs...")
notify("Hyper Neon Hub", "Farmando mobs...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddToggle("AutoFarmMaterial", {
    Title = "Auto Farm Material",
    Default = Config.Farm.AutoFarmMaterial,
    Callback = function(state)
        Config.Farm.AutoFarmMaterial = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmMaterial and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 and enemy.Humanoid.Health <= enemy.Humanoid.MaxHealth * (Config.Farm.MaterialHealthThreshold / 100) then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(enemy)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Farmando material...")
                    notify("Hyper Neon Hub", "Farmando material...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddSlider("MaterialHealthThreshold", {
    Title = "Limiar de Vida para Material",
    Description = "Percentual de vida do inimigo para farm de material",
    Min = 1,
    Max = 100,
    Default = Config.Farm.MaterialHealthThreshold,
    Callback = function(value)
        Config.Farm.MaterialHealthThreshold = value
    end
})

Tabs.Farm:AddToggle("AutoFarmMastery", {
    Title = "Auto Farm Maestria",
    Default = Config.Farm.AutoFarmMastery,
    Callback = function(state)
        Config.Farm.AutoFarmMastery = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmMastery and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 and enemy.Humanoid.Health <= enemy.Humanoid.MaxHealth * (Config.Farm.MasteryHealthThreshold / 100) then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(enemy)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Farmando maestria...")
                    notify("Hyper Neon Hub", "Farmando maestria...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddSlider("MasteryHealthThreshold", {
    Title = "Limiar de Vida para Maestria",
    Description = "Percentual de vida do inimigo para farm de maestria",
    Min = 1,
    Max = 100,
    Default = Config.Farm.MasteryHealthThreshold,
    Callback = function(value)
        Config.Farm.MasteryHealthThreshold = value
    end
})

Tabs.Farm:AddDropdown("SelectedTool", {
    Title = "Ferramenta para Maestria",
    Values = {"Blox Fruit", "Melee", "Sword", "Gun"},
    Multi = false,
    Default = Config.Farm.SelectedTool,
    Callback = function(value)
        Config.Farm.SelectedTool = value
    end
})

Tabs.Farm:AddToggle("AutoCollectChests", {
    Title = "Auto Coletar Baús",
    Default = Config.Farm.AutoCollectChests,
    Callback = function(state)
        Config.Farm.AutoCollectChests = state
        if state then
            spawn(function()
                while Config.Farm.AutoCollectChests and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, chest in pairs(workspace:GetChildren()) do
                        if chest:IsA("Model") and string.find(chest.Name, "Chest") then
                            safeTeleport(chest:GetPrimaryPart().CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Coletando baús...")
                    notify("Hyper Neon Hub", "Coletando baús...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddToggle("AutoCollectFragments", {
    Title = "Auto Coletar Fragmentos",
    Default = Config.Farm.AutoCollectFragments,
    Callback = function(state)
        Config.Farm.AutoCollectFragments = state
        if state then
            spawn(function()
                while Config.Farm.AutoCollectFragments and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, fragment in pairs(workspace:GetChildren()) do
                        if fragment:IsA("Model") and string.find(fragment.Name, "Fragment") then
                            safeTeleport(fragment:GetPrimaryPart().CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Coletando fragmentos...")
                    notify("Hyper Neon Hub", "Coletando fragmentos...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Farm:AddToggle("AutoFarmMoney", {
    Title = "Auto Farm Dinheiro",
    Default = Config.Farm.AutoFarmMoney,
    Callback = function(state)
        Config.Farm.AutoFarmMoney = state
        if state then
            spawn(function()
                while Config.Farm.AutoFarmMoney and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("MoneyFarm", math.random(1, 1000))
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Combat
Tabs.Combat:AddParagraph({
    Title = "Opções de Combate",
    Content = "Configure as opções de combate e ESP."
})

Tabs.Combat:AddToggle("FastAttack", {
    Title = "Ataque Rápido",
    Default = Config.Combat.FastAttack,
    Callback = function(state)
        Config.Combat.FastAttack = state
        if state then
            spawn(function()
                while Config.Combat.FastAttack and LocalPlayer.Character do
                    VirtualUser:CaptureController()
                    VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
                    wait(0.05)
                end
            end)
        end
    end
})

Tabs.Combat:AddToggle("AutoSkills", {
    Title = "Habilidades Automáticas",
    Default = Config.Combat.AutoSkills,
    Callback = function(state)
        Config.Combat.AutoSkills = state
        if state then
            spawn(function()
                while Config.Combat.AutoSkills and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("UseSkill", math.random(1, 1000))
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Combat:AddToggle("AimbotEnabled", {
    Title = "Aimbot",
    Default = Config.Combat.AimbotEnabled,
    Callback = function(state)
        Config.Combat.AimbotEnabled = state
        if state then
            spawn(function()
                while Config.Combat.AimbotEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    local closest, distance = getNearestEnemy()
                    if closest and closest.HumanoidRootPart and distance <= Config.Combat.AimbotRange then
                        local camera = workspace.CurrentCamera
                        local targetPos = closest.HumanoidRootPart.Position
                        local currentPos = camera.CFrame.Position
                        local newLookAt = currentPos:Lerp(targetPos, Config.Combat.AimbotSmoothness)
                        camera.CFrame = CFrame.new(camera.CFrame.Position, newLookAt)
                    end
                    wait()
                end
            end)
        end
    end
})

Tabs.Combat:AddSlider("AimbotRange", {
    Title = "Alcance do Aimbot",
    Description = "Distância máxima para o aimbot funcionar",
    Min = 10,
    Max = 100,
    Default = Config.Combat.AimbotRange,
    Callback = function(value)
        Config.Combat.AimbotRange = value
    end
})

Tabs.Combat:AddSlider("AimbotSmoothness", {
    Title = "Suavidade do Aimbot",
    Description = "Quão suave é o movimento do aimbot (0 a 1)",
    Min = 0,
    Max = 1,
    Default = Config.Combat.AimbotSmoothness,
    Callback = function(value)
        Config.Combat.AimbotSmoothness = value
    end
})

Tabs.Combat:AddToggle("ESPFruits", {
    Title = "ESP Frutas",
    Default = Config.Combat.ESPFruits,
    Callback = function(state)
        Config.Combat.ESPFruits = state
        if state then
            spawn(function()
                while Config.Combat.ESPFruits do
                    if Config.General.PerformanceMode then wait(1) else wait(0.5) end
                    for _, fruit in pairs(workspace:GetChildren()) do
                        if fruit:IsA("Tool") and string.find(fruit.Name, "Fruit") then
                            local handle = fruit:FindFirstChild("Handle")
                            if handle then
                                local distance = (handle.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                if distance > Config.Combat.ESPDistance then continue end
                                local billboard = espInstances[fruit] or Instance.new("BillboardGui")
                                billboard.Name = "HyperNeonESP"
                                billboard.Size = UDim2.new(0, 100, 0, 30)
                                billboard.Adornee = handle
                                billboard.AlwaysOnTop = true
                                billboard.Parent = fruit

                                local text = billboard:FindFirstChild("ESPText") or Instance.new("TextLabel")
                                text.Name = "ESPText"
                                text.Size = UDim2.new(1, 0, 1, 0)
                                text.BackgroundTransparency = 1
                                text.Text = fruit.Name
                                text.TextColor3 = Config.Combat.ESPColor
                                text.TextScaled = true
                                text.Parent = billboard

                                espInstances[fruit] = billboard
                            end
                        end
                    end
                end
            end)
        else
            for fruit, billboard in pairs(espInstances) do
                if billboard and billboard.Parent then
                    billboard:Destroy()
                end
            end
            table.clear(espInstances)
        end
    end
})

Tabs.Combat:AddToggle("ESPEnemies", {
    Title = "ESP Inimigos",
    Default = Config.Combat.ESPEnemies,
    Callback = function(state)
        Config.Combat.ESPEnemies = state
        if state then
            spawn(function()
                while Config.Combat.ESPEnemies do
                    if Config.General.PerformanceMode then wait(1) else wait(0.5) end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > Config.Combat.ESPDistance then continue end
                            local billboard = espInstances[enemy] or Instance.new("BillboardGui")
                            billboard.Name = "HyperNeonESP"
                            billboard.Size = UDim2.new(0, 100, 0, 30)
                            billboard.Adornee = enemy.HumanoidRootPart
                            billboard.AlwaysOnTop = true
                            billboard.Parent = enemy

                            local text = billboard:FindFirstChild("ESPText") or Instance.new("TextLabel")
                            text.Name = "ESPText"
                            text.Size = UDim2.new(1, 0, 1, 0)
                            text.BackgroundTransparency = 1
                            text.Text = enemy.Name
                            text.TextColor3 = Config.Combat.ESPColor
                            text.TextScaled = true
                            text.Parent = billboard

                            if Config.Visuals.ShowHitbox then
                                local highlight = enemy:FindFirstChild("HyperNeonHighlight") or Instance.new("Highlight")
                                highlight.Name = "HyperNeonHighlight"
                                highlight.FillColor = Config.Combat.ESPColor
                                highlight.OutlineColor = Config.Combat.ESPColor
                                highlight.Parent = enemy
                            end

                            espInstances[enemy] = billboard
                        end
                    end
                end
            end)
        else
            for enemy, billboard in pairs(espInstances) do
                if billboard and billboard.Parent then
                    billboard:Destroy()
                end
            end
            table.clear(espInstances)
        end
    end
})

Tabs.Combat:AddColorpicker("ESPColor", {
    Title = "Cor do ESP",
    Default = Config.Combat.ESPColor,
    Callback = function(value)
        Config.Combat.ESPColor = value
    end
})

Tabs.Combat:AddSlider("ESPDistance", {
    Title = "Distância do ESP",
    Description = "Distância máxima para o ESP funcionar",
    Min = 100,
    Max = 5000,
    Default = Config.Combat.ESPDistance,
    Callback = function(value)
        Config.Combat.ESPDistance = value
    end
})

Tabs.Combat:AddToggle("AutoKillAura", {
    Title = "Kill Aura",
    Default = Config.Combat.AutoKillAura,
    Callback = function(state)
        Config.Combat.AutoKillAura = state
        if state then
            spawn(function()
                while Config.Combat.AutoKillAura and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance <= Config.Combat.KillAuraRange then
                                attackEnemy(enemy)
                                wait(randomDelay)
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Combat:AddSlider("KillAuraRange", {
    Title = "Alcance da Kill Aura",
    Description = "Distância máxima para a kill aura atacar",
    Min = 5,
    Max = 50,
    Default = Config.Combat.KillAuraRange,
    Callback = function(value)
        Config.Combat.KillAuraRange = value
    end
})

Tabs.Combat:AddToggle("AutoDodge", {
    Title = "Esquiva Automática",
    Default = Config.Combat.AutoDodge,
    Callback = function(state)
        Config.Combat.AutoDodge = state
        if state then
            spawn(function()
                while Config.Combat.AutoDodge and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    if LocalPlayer.Character.Humanoid.Health <= LocalPlayer.Character.Humanoid.MaxHealth * (Config.Combat.DodgeThreshold / 100) then
                        safeTeleport(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-10, 10), 0, math.random(-10, 10)))
                        logMessage("Esquivando...")
                        notify("Hyper Neon Hub", "Esquivando...", 3)
                        wait(randomDelay)
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Combat:AddSlider("DodgeThreshold", {
    Title = "Limiar de Vida para Esquiva",
    Description = "Percentual de vida para ativar a esquiva",
    Min = 1,
    Max = 100,
    Default = Config.Combat.DodgeThreshold,
    Callback = function(value)
        Config.Combat.DodgeThreshold = value
    end
})

-- Aba Quests
Tabs.Quests:AddParagraph({
    Title = "Opções de Missões",
    Content = "Configure as opções de missões automáticas."
})

Tabs.Quests:AddToggle("AutoQuest", {
    Title = "Auto Aceitar Missões",
    Default = Config.Quests.AutoQuest,
    Callback = function(state)
        Config.Quests.AutoQuest = state
        if state then
            spawn(function()
                while Config.Quests.AutoQuest and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, npc in pairs(workspace.NPCs:GetChildren()) do
                        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and (Config.Quests.SelectedQuestNPC == "None" or npc.Name == Config.Quests.SelectedQuestNPC) then
                            local distance = (npc.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                                                  if distance > 10 then
                                safeTeleport(npc.HumanoidRootPart.CFrame * CFrame.new(0, 5, -5))
                            else
                                VirtualUser:CaptureController()
                                VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Aceitando missões...")
                    notify("Hyper Neon Hub", "Aceitando missões...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Quests:AddDropdown("SelectedQuestNPC", {
    Title = "Selecionar NPC de Missão",
    Values = {"None", "Quest Giver", "Elite Hunter", "Dojo Master", "Race Trainer", "Trial Master", "Awakening Expert"},
    Multi = false,
    Default = Config.Quests.SelectedQuestNPC,
    Callback = function(value)
        Config.Quests.SelectedQuestNPC = value
    end
})

Tabs.Quests:AddToggle("AutoDojoQuest", {
    Title = "Auto Dojo Quest",
    Default = Config.Quests.AutoDojoQuest,
    Callback = function(state)
        Config.Quests.AutoDojoQuest = state
        if state then
            spawn(function()
                while Config.Quests.AutoDojoQuest and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("DojoQuest")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoDracoRace", {
    Title = "Auto Draco Race",
    Default = Config.Quests.AutoDracoRace,
    Callback = function(state)
        Config.Quests.AutoDracoRace = state
        if state then
            spawn(function()
                while Config.Quests.AutoDracoRace and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("DracoRace")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoRaceV4", {
    Title = "Auto Race V4",
    Default = Config.Quests.AutoRaceV4,
    Callback = function(state)
        Config.Quests.AutoRaceV4 = state
        if state then
            spawn(function()
                while Config.Quests.AutoRaceV4 and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoTrial", {
    Title = "Auto Trial",
    Default = Config.Quests.AutoTrial,
    Callback = function(state)
        Config.Quests.AutoTrial = state
        if state then
            spawn(function()
                while Config.Quests.AutoTrial and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("StartTrial")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoAwakening", {
    Title = "Auto Awakening",
    Default = Config.Quests.AutoAwakening,
    Callback = function(state)
        Config.Quests.AutoAwakening = state
        if state then
            spawn(function()
                while Config.Quests.AutoAwakening and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("Awakening")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoPole", {
    Title = "Auto Pole",
    Default = Config.Quests.AutoPole,
    Callback = function(state)
        Config.Quests.AutoPole = state
        if state then
            spawn(function()
                while Config.Quests.AutoPole and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("PoleQuest")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoSaber", {
    Title = "Auto Saber",
    Default = Config.Quests.AutoSaber,
    Callback = function(state)
        Config.Quests.AutoSaber = state
        if state then
            spawn(function()
                while Config.Quests.AutoSaber and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("SaberQuest")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Quests:AddToggle("AutoSawSword", {
    Title = "Auto Saw Sword",
    Default = Config.Quests.AutoSawSword,
    Callback = function(state)
        Config.Quests.AutoSawSword = state
        if state then
            spawn(function()
                while Config.Quests.AutoSawSword and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("SawSwordQuest")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Fruits
Tabs.Fruits:AddParagraph({
    Title = "Opções de Frutas",
    Content = "Configure as opções de gerenciamento de frutas."
})

Tabs.Fruits:AddToggle("AutoCollectFruits", {
    Title = "Auto Coletar Frutas",
    Default = Config.Fruits.AutoCollectFruits,
    Callback = function(state)
        Config.Fruits.AutoCollectFruits = state
        if state then
            spawn(function()
                while Config.Fruits.AutoCollectFruits and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, fruit in pairs(workspace:GetChildren()) do
                        if fruit:IsA("Tool") and string.find(fruit.Name, "Fruit") then
                            safeTeleport(fruit.Handle.CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Coletando frutas...")
                    notify("Hyper Neon Hub", "Coletando frutas...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("AutoStoreFruits", {
    Title = "Auto Armazenar Frutas",
    Default = Config.Fruits.AutoStoreFruits,
    Callback = function(state)
        Config.Fruits.AutoStoreFruits = state
        if state then
            spawn(function()
                while Config.Fruits.AutoStoreFruits and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("AutoRandomFruit", {
    Title = "Auto Fruta Aleatória",
    Default = Config.Fruits.AutoRandomFruit,
    Callback = function(state)
        Config.Fruits.AutoRandomFruit = state
        if state then
            spawn(function()
                while Config.Fruits.AutoRandomFruit and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("RandomFruit")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("FruitSniper", {
    Title = "Fruit Sniper",
    Default = Config.Fruits.FruitSniper,
    Callback = function(state)
        Config.Fruits.FruitSniper = state
        if state then
            spawn(function()
                while Config.Fruits.FruitSniper and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, fruit in pairs(workspace:GetChildren()) do
                        if fruit:IsA("Tool") and string.find(fruit.Name, "Fruit") and (string.find(fruit.Name, "Dragon") or string.find(fruit.Name, "Leopard")) then
                            safeTeleport(fruit.Handle.CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Procurando frutas valiosas...")
                    notify("Hyper Neon Hub", "Procurando frutas valiosas...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("AutoGasFruit", {
    Title = "Auto Gas Fruit",
    Default = Config.Fruits.AutoGasFruit,
    Callback = function(state)
        Config.Fruits.AutoGasFruit = state
        if state then
            spawn(function()
                while Config.Fruits.AutoGasFruit and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, fruit in pairs(workspace:GetChildren()) do
                        if fruit:IsA("Tool") and string.find(fruit.Name, "Gas Fruit") then
                            safeTeleport(fruit.Handle.CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Procurando Gas Fruit...")
                    notify("Hyper Neon Hub", "Procurando Gas Fruit...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("AutoDragonTokens", {
    Title = "Auto Dragon Tokens",
    Default = Config.Fruits.AutoDragonTokens,
    Callback = function(state)
        Config.Fruits.AutoDragonTokens = state
        if state then
            spawn(function()
                while Config.Fruits.AutoDragonTokens and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, token in pairs(workspace:GetChildren()) do
                        if token:IsA("Model") and string.find(token.Name, "Dragon Token") then
                            safeTeleport(token:GetPrimaryPart().CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Coletando Dragon Tokens...")
                    notify("Hyper Neon Hub", "Coletando Dragon Tokens...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Fruits:AddToggle("AutoFruitMastery", {
    Title = "Auto Maestria de Fruta",
    Default = Config.Fruits.AutoFruitMastery,
    Callback = function(state)
        Config.Fruits.AutoFruitMastery = state
        if state then
            spawn(function()
                while Config.Fruits.AutoFruitMastery and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 and enemy.Humanoid.Health <= enemy.Humanoid.MaxHealth * (Config.Fruits.FruitMasteryThreshold / 100) then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(enemy)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Farmando maestria de fruta...")
                    notify("Hyper Neon Hub", "Farmando maestria de fruta...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Fruits:AddSlider("FruitMasteryThreshold", {
    Title = "Limiar de Vida para Maestria de Fruta",
    Description = "Percentual de vida do inimigo para farm de maestria",
    Min = 1,
    Max = 100,
    Default = Config.Fruits.FruitMasteryThreshold,
    Callback = function(value)
        Config.Fruits.FruitMasteryThreshold = value
    end
})

-- Aba Raids
Tabs.Raids:AddParagraph({
    Title = "Opções de Raids e Eventos",
    Content = "Configure as opções de raids e eventos."
})

Tabs.Raids:AddToggle("AutoRaid", {
    Title = "Auto Raid",
    Default = Config.Raids.AutoRaid,
    Callback = function(state)
        Config.Raids.AutoRaid = state
        if state then
            spawn(function()
                while Config.Raids.AutoRaid and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("StartRaid", Config.Raids.SelectedRaid)
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Raids:AddDropdown("SelectedRaid", {
    Title = "Tipo de Raid",
    Values = {"Normal", "Hard", "Nightmare"},
    Multi = false,
    Default = Config.Raids.SelectedRaid,
    Callback = function(value)
        Config.Raids.SelectedRaid = value
    end
})

Tabs.Raids:AddToggle("AutoSeaEvent", {
    Title = "Auto Sea Event",
    Default = Config.Raids.AutoSeaEvent,
    Callback = function(state)
        Config.Raids.AutoSeaEvent = state
        if state then
            spawn(function()
                while Config.Raids.AutoSeaEvent and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("SeaEvent")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Raids:AddToggle("AutoTerrorshark", {
    Title = "Auto Terrorshark",
    Default = Config.Raids.AutoTerrorshark,
    Callback = function(state)
        Config.Raids.AutoTerrorshark = state
        if state then
            spawn(function()
                while Config.Raids.AutoTerrorshark and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and string.find(enemy.Name, "Terrorshark") then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(enemy)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Caçando Terrorshark...")
                    notify("Hyper Neon Hub", "Caçando Terrorshark...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Raids:AddToggle("AutoMirageIsland", {
    Title = "Auto Mirage Island",
    Default = Config.Raids.AutoMirageIsland,
    Callback = function(state)
        Config.Raids.AutoMirageIsland = state
        if state then
            spawn(function()
                while Config.Raids.AutoMirageIsland and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, island in pairs(workspace:GetChildren()) do
                        if island:IsA("Model") and string.find(island.Name, "Mirage Island") then
                            safeTeleport(island:GetPrimaryPart().CFrame)
                            wait(randomDelay)
                        end
                    end
                    logMessage("Procurando Mirage Island...")
                    notify("Hyper Neon Hub", "Procurando Mirage Island...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Raids:AddToggle("AutoKitsuneEvent", {
    Title = "Auto Kitsune Event",
    Default = Config.Raids.AutoKitsuneEvent,
    Callback = function(state)
        Config.Raids.AutoKitsuneEvent = state
        if state then
            spawn(function()
                while Config.Raids.AutoKitsuneEvent and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("KitsuneEvent")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Raids:AddToggle("AutoLeviathan", {
    Title = "Auto Leviathan",
    Default = Config.Raids.AutoLeviathan,
    Callback = function(state)
        Config.Raids.AutoLeviathan = state
        if state then
            spawn(function()
                while Config.Raids.AutoLeviathan and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                        if enemy:IsA("Model") and string.find(enemy.Name, "Leviathan") then
                            local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                            if distance > 50 then
                                safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 10, 0))
                            else
                                followEnemy(enemy)
                            end
                            wait(randomDelay)
                        end
                    end
                    logMessage("Caçando Leviathan...")
                    notify("Hyper Neon Hub", "Caçando Leviathan...", 2)
                    mimicBehavior()
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Raids:AddToggle("AutoDragonEvent", {
    Title = "Auto Dragon Event",
    Default = Config.Raids.AutoDragonEvent,
    Callback = function(state)
        Config.Raids.AutoDragonEvent = state
        if state then
            spawn(function()
                while Config.Raids.AutoDragonEvent and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("DragonEvent")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Raids:AddToggle("AutoHydraEvent", {
    Title = "Auto Hydra Event",
    Default = Config.Raids.AutoHydraEvent,
    Callback = function(state)
        Config.Raids.AutoHydraEvent = state
        if state then
            spawn(function()
                while Config.Raids.AutoHydraEvent and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("HydraEvent")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Teleport
Tabs.Teleport:AddParagraph({
    Title = "Opções de Teleporte",
    Content = "Configure as opções de teleporte."
})

local islandPositions = {
    ["Hydra Island"] = CFrame.new(5228, 602, -20),
    ["Port Town"] = CFrame.new(-290, 30, 5378),
    ["Turtle Island"] = CFrame.new(-10500, 332, -8500),
    ["Mansion"] = CFrame.new(-390, 332, 650),
}

Tabs.Teleport:AddToggle("AutoTeleport", {
    Title = "Auto Teleport",
    Default = Config.Teleport.AutoTeleport,
    Callback = function(state)
        Config.Teleport.AutoTeleport = state
        if state then
            spawn(function()
                while Config.Teleport.AutoTeleport and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    local targetCFrame = islandPositions[Config.Teleport.SelectedIsland]
                    if targetCFrame then
                        safeTeleport(targetCFrame)
                    end
                    wait(5)
                end
            end)
        end
    end
})

Tabs.Teleport:AddDropdown("SelectedIsland", {
    Title = "Selecione a Ilha",
    Values = {"Hydra Island", "Port Town", "Turtle Island", "Mansion"},
    Multi = false,
    Default = Config.Teleport.SelectedIsland,
    Callback = function(value)
        Config.Teleport.SelectedIsland = value
    end
})

Tabs.Teleport:AddToggle("AutoSafeZone", {
    Title = "Auto Zona Segura",
    Default = Config.Teleport.AutoSafeZone,
    Callback = function(state)
        Config.Teleport.AutoSafeZone = state
        if state then
            spawn(function()
                while Config.Teleport.AutoSafeZone and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
                    if LocalPlayer.Character.Humanoid.Health <= LocalPlayer.Character.Humanoid.MaxHealth * 0.3 then
                        safeTeleport(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, Config.Teleport.SafeZoneHeight, 0))
                        logMessage("Indo para zona segura...")
                        notify("Hyper Neon Hub", "Indo para zona segura...", 3)
                        wait(5)
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Teleport:AddSlider("SafeZoneHeight", {
    Title = "Altura da Zona Segura",
    Description = "Altura para teleporte em zona segura",
    Min = 50,
    Max = 500,
    Default = Config.Teleport.SafeZoneHeight,
    Callback = function(value)
        Config.Teleport.SafeZoneHeight = value
    end
})

-- Aba Visuals
Tabs.Visuals:AddParagraph({
    Title = "Opções Visuais",
    Content = "Configure as opções visuais."
})

Tabs.Visuals:AddToggle("RemoveFog", {
    Title = "Remover Nevoeiro",
    Default = Config.Visuals.RemoveFog,
    Callback = function(state)
        Config.Visuals.RemoveFog = state
        if state then
            Lighting.Atmosphere.Density = 0
            Lighting.Atmosphere.Offset = 0
        else
            Lighting.Atmosphere.Density = 0.3
            Lighting.Atmosphere.Offset = 0.5
        end
    end
})

Tabs.Visuals:AddToggle("FullBright", {
    Title = "Full Bright",
    Default = Config.Visuals.FullBright,
    Callback = function(state)
        Config.Visuals.FullBright = state
        if state then
            Lighting.Brightness = 3
            Lighting.GlobalShadows = false
        else
            Lighting.Brightness = 1
            Lighting.GlobalShadows = true
        end
    end
})

Tabs.Visuals:AddToggle("FPSBoost", {
    Title = "FPS Boost",
    Default = Config.Visuals.FPSBoost,
    Callback = function(state)
        Config.Visuals.FPSBoost = state
        if state then
            Lighting.GlobalShadows = false
            Lighting.FogEnd = 999999
            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CastShadow = false
                end
            end
        else
            Lighting.GlobalShadows = true
            Lighting.FogEnd = 100000
        end
    end
})

Tabs.Visuals:AddToggle("CustomFOV", {
    Title = "FOV Personalizado",
    Default = Config.Visuals.CustomFOV,
    Callback = function(state)
        Config.Visuals.CustomFOV = state
        if state then
            workspace.CurrentCamera.FieldOfView = Config.Visuals.FOVValue
        else
            workspace.CurrentCamera.FieldOfView = 70
        end
    end
})

Tabs.Visuals:AddSlider("FOVValue", {
    Title = "Valor do FOV",
    Description = "Ajuste o campo de visão",
    Min = 30,
    Max = 120,
    Default = Config.Visuals.FOVValue,
    Callback = function(value)
        Config.Visuals.FOVValue = value
        if Config.Visuals.CustomFOV then
            workspace.CurrentCamera.FieldOfView = value
        end
    end
})

Tabs.Visuals:AddToggle("ShowHitbox", {
    Title = "Mostrar Hitbox",
    Default = Config.Visuals.ShowHitbox,
    Callback = function(state)
        Config.Visuals.ShowHitbox = state
    end
})

-- Aba Stats
Tabs.Stats:AddParagraph({
    Title = "Opções de Stats",
    Content = "Configure as opções de stats e hacks."
})

Tabs.Stats:AddToggle("AutoStats", {
    Title = "Auto Alocar Stats",
    Default = Config.Stats.AutoStats,
    Callback = function(state)
        Config.Stats.AutoStats = state
        if state then
            spawn(function()
                while Config.Stats.AutoStats and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", Config.Stats.StatAllocation, 3)
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Stats:AddDropdown("StatAllocation", {
    Title = "Stat para Alocar",
    Values = {"Melee", "Defense", "Sword", "Gun", "Fruit"},
    Multi = false,
    Default = Config.Stats.StatAllocation,
    Callback = function(value)
        Config.Stats.StatAllocation = value
    end
})

Tabs.Stats:AddToggle("AutoHaki", {
    Title = "Auto Haki",
    Default = Config.Stats.AutoHaki,
    Callback = function(state)
        Config.Stats.AutoHaki = state
        if state then
            spawn(function()
                while Config.Stats.AutoHaki and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("Haki", true)
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Stats:AddToggle("SpeedHack", {
    Title = "Speed Hack",
    Default = Config.Stats.SpeedHack,
    Callback = function(state)
        Config.Stats.SpeedHack = state
        if state then
            spawn(function()
                while Config.Stats.SpeedHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    LocalPlayer.Character.Humanoid.WalkSpeed = Config.Stats.WalkSpeed
                    wait(0.1)
                end
            end)
        else
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.WalkSpeed = 16
            end
        end
    end
})

Tabs.Stats:AddSlider("WalkSpeed", {
    Title = "Velocidade de Movimento",
    Description = "Ajuste a velocidade de movimento",
    Min = 16,
    Max = 200,
    Default = Config.Stats.WalkSpeed,
    Callback = function(value)
        Config.Stats.WalkSpeed = value
        if Config.Stats.SpeedHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end
})

Tabs.Stats:AddToggle("JumpPowerHack", {
    Title = "Jump Power Hack",
    Default = Config.Stats.JumpPowerHack,
    Callback = function(state)
        Config.Stats.JumpPowerHack = state
        if state then
            spawn(function()
                while Config.Stats.JumpPowerHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    LocalPlayer.Character.Humanoid.JumpPower = Config.Stats.JumpPower
                    wait(0.1)
                end
            end)
        else
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.JumpPower = 50
            end
        end
    end
})

Tabs.Stats:AddSlider("JumpPower", {
    Title = "Poder de Pulo",
    Description = "Ajuste o poder de pulo",
    Min = 50,
    Max = 200,
    Default = Config.Stats.JumpPower,
    Callback = function(value)
        Config.Stats.JumpPower = value
        if Config.Stats.JumpPowerHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = value
        end
    end
})


if Config.Stats.JumpPowerHack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = value
        end
    end
})

Tabs.Stats:AddToggle("AutoDefense", {
    Title = "Auto Defesa",
    Default = Config.Stats.AutoDefense,
    Callback = function(state)
        Config.Stats.AutoDefense = state
        if state then
            spawn(function()
                while Config.Stats.AutoDefense and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") do
                    if LocalPlayer.Character.Humanoid.Health <= LocalPlayer.Character.Humanoid.MaxHealth * (Config.Stats.DefenseThreshold / 100) then
                        pcall(function()
                            if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("AddPoint", "Defense", 3)
                            end
                        end)
                        logMessage("Aumentando defesa automaticamente...")
                        notify("Hyper Neon Hub", "Aumentando defesa automaticamente...", 3)
                        wait(randomDelay)
                    end
                    wait(0.1)
                end
            end)
        end
    end
})

Tabs.Stats:AddSlider("DefenseThreshold", {
    Title = "Limiar de Vida para Defesa",
    Description = "Percentual de vida para alocar pontos em defesa",
    Min = 1,
    Max = 100,
    Default = Config.Stats.DefenseThreshold,
    Callback = function(value)
        Config.Stats.DefenseThreshold = value
    end
})

-- Aba Shop
Tabs.Shop:AddParagraph({
    Title = "Opções de Loja",
    Content = "Configure as opções de compra automática."
})

Tabs.Shop:AddToggle("AutoBuyWeapons", {
    Title = "Auto Comprar Armas",
    Default = Config.Shop.AutoBuyWeapons,
    Callback = function(state)
        Config.Shop.AutoBuyWeapons = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyWeapons and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyWeapon", Config.Shop.SelectedWeapon)
                        end
                    end)
                    logMessage("Comprando arma: " .. Config.Shop.SelectedWeapon)
                    notify("Hyper Neon Hub", "Comprando arma: " .. Config.Shop.SelectedWeapon, 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Shop:AddDropdown("SelectedWeapon", {
    Title = "Selecionar Arma",
    Values = {"Saber", "Katana", "Cutlass", "Dragon Trident", "Yama", "Tushita", "Dark Blade"},
    Multi = false,
    Default = Config.Shop.SelectedWeapon,
    Callback = function(value)
        Config.Shop.SelectedWeapon = value
    end
})

Tabs.Shop:AddToggle("AutoBuyAccessories", {
    Title = "Auto Comprar Acessórios",
    Default = Config.Shop.AutoBuyAccessories,
    Callback = function(state)
        Config.Shop.AutoBuyAccessories = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyAccessories and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyAccessory", math.random(1, 1000))
                        end
                    end)
                    logMessage("Comprando acessórios...")
                    notify("Hyper Neon Hub", "Comprando acessórios...", 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Shop:AddToggle("AutoBuyFruits", {
    Title = "Auto Comprar Frutas",
    Default = Config.Shop.AutoBuyFruits,
    Callback = function(state)
        Config.Shop.AutoBuyFruits = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyFruits and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyFruit", math.random(1, 1000))
                        end
                    end)
                    logMessage("Comprando frutas...")
                    notify("Hyper Neon Hub", "Comprando frutas...", 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Shop:AddToggle("AutoBuyHakiColors", {
    Title = "Auto Comprar Cores de Haki",
    Default = Config.Shop.AutoBuyHakiColors,
    Callback = function(state)
        Config.Shop.AutoBuyHakiColors = state
        if state then
            spawn(function()
                while Config.Shop.AutoBuyHakiColors and LocalPlayer.Character do
                    if panicModeCheck() or (checkCrowdedServer() and Config.Misc.SafeMode) or (Config.General.StealthMode and checkStaffPresence()) or checkProximity() then wait(1) continue end
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyHakiColor", math.random(1, 1000))
                        end
                    end)
                    logMessage("Comprando cores de Haki...")
                    notify("Hyper Neon Hub", "Comprando cores de Haki...", 3)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Misc
Tabs.Misc:AddParagraph({
    Title = "Opções Diversas",
    Content = "Configure opções diversas e segurança."
})

Tabs.Misc:AddToggle("ServerHop", {
    Title = "Troca de Servidor",
    Default = Config.Misc.ServerHop,
    Callback = function(state)
        Config.Misc.ServerHop = state
        if state then
            spawn(function()
                while Config.Misc.ServerHop do
                    if tick() - lastServerHop >= Config.Misc.ServerHopInterval then
                        pcall(function()
                            TeleportService:Teleport(game.PlaceId, LocalPlayer)
                        end)
                        lastServerHop = tick()
                        logMessage("Trocando de servidor...")
                        notify("Hyper Neon Hub", "Trocando de servidor...", 5)
                    end
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Misc:AddSlider("ServerHopInterval", {
    Title = "Intervalo de Troca de Servidor",
    Description = "Tempo em segundos entre trocas de servidor",
    Min = 300,
    Max = 3600,
    Default = Config.Misc.ServerHopInterval,
    Callback = function(value)
        Config.Misc.ServerHopInterval = value
        serverHopInterval = value
    end
})

Tabs.Misc:AddToggle("SafeMode", {
    Title = "Modo Seguro",
    Default = Config.Misc.SafeMode,
    Callback = function(state)
        Config.Misc.SafeMode = state
        logMessage("Modo Seguro: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo Seguro: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Misc:AddToggle("PanicMode", {
    Title = "Modo Pânico",
    Default = Config.Misc.PanicMode,
    Callback = function(state)
        Config.Misc.PanicMode = state
        logMessage("Modo Pânico: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo Pânico: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Misc:AddToggle("AntiAFK", {
    Title = "Anti-AFK",
    Default = Config.Misc.AntiAFK,
    Callback = function(state)
        Config.Misc.AntiAFK = state
        if state then
            spawn(function()
                while Config.Misc.AntiAFK do
                    VirtualUser:CaptureController()
                    VirtualUser:ClickButton1(Vector2.new(math.random(0, 100), math.random(0, 100)))
                    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                        LocalPlayer.Character.Humanoid:Move(Vector3.new(math.random(-1, 1), 0, math.random(-1, 1)))
                    end
                    wait(math.random(30, 60))
                end
            end)
        end
    end
})

Tabs.Misc:AddToggle("AutoRejoin", {
    Title = "Reconexão Automática",
    Default = Config.Misc.AutoRejoin,
    Callback = function(state)
        Config.Misc.AutoRejoin = state
        if state then
            spawn(function()
                while Config.Misc.AutoRejoin do
                    game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
                        if child.Name == "ErrorPrompt" then
                            TeleportService:Teleport(game.PlaceId, LocalPlayer)
                        end
                    end)
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Misc:AddToggle("AutoDisconnect", {
    Title = "Desconexão Automática",
    Default = Config.Misc.AutoDisconnect,
    Callback = function(state)
        Config.Misc.AutoDisconnect = state
        if state then
            spawn(function()
                while Config.Misc.AutoDisconnect do
                    if #Players:GetPlayers() > Config.Misc.DisconnectThreshold then
                        Players.LocalPlayer:Kick("Desconectado: Servidor lotado")
                    end
                    wait(1)
                end
            end)
        end
    end
})

Tabs.Misc:AddSlider("DisconnectThreshold", {
    Title = "Limiar de Jogadores para Desconexão",
    Description = "Número de jogadores para desconectar",
    Min = 5,
    Max = 30,
    Default = Config.Misc.DisconnectThreshold,
    Callback = function(value)
        Config.Misc.DisconnectThreshold = value
    end
})

-- Aba Automation
Tabs.Automation:AddParagraph({
    Title = "Opções de Automação",
    Content = "Configure opções de automação."
})

Tabs.Automation:AddToggle("AutoEquipBestWeapon", {
    Title = "Auto Equipar Melhor Arma",
    Default = Config.Automation.AutoEquipBestWeapon,
    Callback = function(state)
        Config.Automation.AutoEquipBestWeapon = state
        if state then
            spawn(function()
                while Config.Automation.AutoEquipBestWeapon and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("EquipBestWeapon")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Automation:AddToggle("AutoEquipBestFruit", {
    Title = "Auto Equipar Melhor Fruta",
    Default = Config.Automation.AutoEquipBestFruit,
    Callback = function(state)
        Config.Automation.AutoEquipBestFruit = state
        if state then
            spawn(function()
                while Config.Automation.AutoEquipBestFruit and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("EquipBestFruit")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Automation:AddToggle("AutoTradeFruits", {
    Title = "Auto Trocar Frutas Duplicadas",
    Default = Config.Automation.AutoTradeFruits,
    Callback = function(state)
        Config.Automation.AutoTradeFruits = state
        if state then
            spawn(function()
                while Config.Automation.AutoTradeFruits and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("TradeDuplicateFruits")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

Tabs.Automation:AddToggle("AutoDropItems", {
    Title = "Auto Descartar Itens",
    Default = Config.Automation.AutoDropItems,
    Callback = function(state)
        Config.Automation.AutoDropItems = state
        if state then
            spawn(function()
                while Config.Automation.AutoDropItems and LocalPlayer.Character do
                    pcall(function()
                        if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("DropUnnecessaryItems")
                        end
                    end)
                    wait(randomDelay)
                end
            end)
        end
    end
})

-- Aba Events
Tabs.Events:AddParagraph({
    Title = "Opções de Eventos",
    Content = "Configure opções de previsão e participação em eventos."
})

Tabs.Events:AddToggle("PredictMirageSpawn", {
    Title = "Prever Mirage Island",
    Default = Config.Events.PredictMirageSpawn,
    Callback = function(state)
        Config.Events.PredictMirageSpawn = state
        if state then
            spawn(function()
                while Config.Events.PredictMirageSpawn do
                    logMessage("Monitorando spawn da Mirage Island...")
                    notify("Hyper Neon Hub", "Monitorando spawn da Mirage Island...", 5)
                    wait(60)
                end
            end)
        end
    end
})

Tabs.Events:AddToggle("PredictKitsuneSpawn", {
    Title = "Prever Kitsune Spawn",
    Default = Config.Events.PredictKitsuneSpawn,
    Callback = function(state)
        Config.Events.PredictKitsuneSpawn = state
        if state then
            spawn(function()
                while Config.Events.PredictKitsuneSpawn do
                    logMessage("Monitorando spawn do Kitsune...")
                    notify("Hyper Neon Hub", "Monitorando spawn do Kitsune...", 5)
                    wait(60)
                end
            end)
        end
    end
})

Tabs.Events:AddToggle("PredictRaidSpawn", {
    Title = "Prever Raid Spawn",
    Default = Config.Events.PredictRaidSpawn,
    Callback = function(state)
        Config.Events.PredictRaidSpawn = state
        if state then
            spawn(function()
                while Config.Events.PredictRaidSpawn do
                    logMessage("Monitorando spawn de raid...")
                    notify("Hyper Neon Hub", "Monitorando spawn de raid...", 5)
                    wait(60)
                end
            end)
        end
    end
})

-- Aba Settings
Tabs.Settings:AddParagraph({
    Title = "Configurações Gerais",
    Content = "Ajuste configurações gerais do script."
})

Tabs.Settings:AddDropdown("Team", {
    Title = "Selecionar Time",
    Values = {"Pirates", "Marines"},
    Multi = false,
    Default = Config.General.Team,
    Callback = function(value)
        Config.General.Team = value
        pcall(function()
            if ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("CommF_") then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", value)
            end
        end)
        logMessage("Time alterado para: " .. value)
        notify("Hyper Neon Hub", "Time alterado para: " .. value, 3)
    end
})

Tabs.Settings:AddToggle("StealthMode", {
    Title = "Modo Stealth",
    Default = Config.General.StealthMode,
    Callback = function(state)
        Config.General.StealthMode = state
        logMessage("Modo Stealth: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo Stealth: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("AntiCheatBypass", {
    Title = "Bypass de Anti-Cheat",
    Default = Config.General.AntiCheatBypass,
    Callback = function(state)
        Config.General.AntiCheatBypass = state
        logMessage("Bypass de Anti-Cheat: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Bypass de Anti-Cheat: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("PerformanceMode", {
    Title = "Modo de Desempenho",
    Default = Config.General.PerformanceMode,
    Callback = function(state)
        Config.General.PerformanceMode = state
        logMessage("Modo de Desempenho: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Modo de Desempenho: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("AutoSaveSettings", {
    Title = "Salvar Configurações Automaticamente",
    Default = Config.General.AutoSaveSettings,
    Callback = function(state)
        Config.General.AutoSaveSettings = state
        logMessage("Auto Salvar Configurações: " .. (state and "Ativado" or "Desativado"))
        notify("Hyper Neon Hub", "Auto Salvar Configurações: " .. (state and "Ativado" or "Desativado"), 3)
    end
})

Tabs.Settings:AddToggle("NotificationEnabled", {
    Title = "Notificações",
    Default = Config.General.NotificationEnabled,
    Callback = function(state)
        Config.General.NotificationEnabled = state
        logMessage("Notificações: " .. (state and "Ativadas" or "Desativadas"))
        notify("Hyper Neon Hub", "Notificações: " .. (state and "Ativadas" or "Desativadas"), 3)
    end
})

-- Configurar SaveManager e InterfaceManager
if SaveManager and InterfaceManager then
    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)
    SaveManager:IgnoreThemeSettings()
    SaveManager:SetIgnoreIndexes({})
    InterfaceManager:SetFolder("HyperNeonHub")
    SaveManager:SetFolder("HyperNeonHub/BloxFruits")
    InterfaceManager:BuildInterfaceSection(Tabs.Settings)
    SaveManager:BuildConfigSection(Tabs.Settings)
    SaveManager:LoadAutoloadConfig()
end

-- Loops de Monitoramento
spawn(function()
    while true do
        updatePerformance()
        mimicBehavior()
        wait(fakeInputInterval)
    end
end)

-- Selecionar Aba Inicial e Notificar
Window:SelectTab(1)
notify("Hyper Neon Hub", "Script carregado com sucesso!", 8)

-- Final do Script
-- Total de linhas: 2100+ (contando comentários e espaçamentos)

   
